% misc

# [Linux] ユーザー一覧:
cat /etc/passwd

# [PG] PG の暗号化のパラメータ:
PGOPTIONS="-c encrypt.enable=off"

# [PG] Vacuum などの統計情報を知るためのコマンド:
SELECT relname, n_live_tup, n_dead_tup, CASE n_dead_tup WHEN 0 THEN 0 ELSE round(n_dead_tup*100/(n_live_tup+n_dead_tup) ,2)END AS ratio, last_autovacuum, last_autoanalyze  FROM pg_stat_user_tables ORDER BY ratio DESC ;

# [PG] コネクションを切断するコマンド:
psql -h localhost -c "select pg_terminate_backend(pid) from pg_stat_activity where pid <> pg_backend_pid();"

# [PG] シーケンスの設定方法:
SELECT pg_catalog.setval('grandberrypark.m_report_report_id_seq', 22, true);

# [PG] ホスト内のDB一覧を取得する
SELECT datname FROM pg_database WHERE datname LIKE 'db%';

# [PG] DB内のスキーマ一覧を取得する
SELECT schema_name FROM information_schema.schemata WHERE schema_owner != 'postgres';

# [PG] 各DBの容量を調べるコマンド
SELECT datname, pg_size_pretty(pg_database_size(datname)) FROM pg_database;

# [PG] 接続されているコネクションを調査するためのコマンド
# SELECT pid, query_start, substr(query, 0, 50) FROM pg_stat_activity WHERE state = 'active' ORDER BY query_start;

# [Vim] コマンドラインウィンドウ上でいい感じに編集 :
:<C-f>

# [Vim] マクロの削除:
:let @a=''

# [Vim] 文字列全体の左寄せ:
:%left

# [sudo] sudo権限追加:
sudo usermod -aG wheel hasefumi23

# [sudo] wheelに所属するユーザ確認:
getent group wheel

# [tar] ファイル先頭の数バイトで判別してよしなに解答してくれるコマンド:
tar -xvf

# [curl] [corona] コロナの状況をグラフィカルに表示してくれる
curl https://corona-stats.online/Japan

# [rg] グロブ指定、ignore case
rg -i 'join' -g '*Repository.xml'

# [nginx] lint
/usr/sbin/nginx -t -c /etc/nginx/nginx.conf

# [git] [URL] branch を rename する記事の URL
https://qiita.com/hogeta_/items/e47dfb0cf88270ef2802

# [Vim] Shift JIS でファイルを開き直す
edit ++encoding=sjis

# [Linux] ログ撮るときのコマンド
script ~/`whoami`_`hostname`_`date "+%Y-%m-%d_%H%M"`.log

# [Linux] スクリプトの現在のディレクトリを取得する $(cd $(dirname $0); pwd)
echo $(cd $(dirname $0); pwd)

# [Vim] バイナリモードで開く / バッファの中身を文字列 -> バイナリに変換 / バッファの中身をバイナリ -> 文字列に変換
vim -b file.bin
:%!xxd
:%!xxd -r

# [Linux] ポートと使用するソフトウェアのマッピング
view /etc/services

# [zsh] キーに割り当てられているアクションの一覧
bindkey -L

# [Windows] hosts file
C:\Windows\System32\drivers\etc\hosts

# [tmux] セッションを共有して作業する
# Aさん側
tmux -S /tmp/tmux_shared_socket # 共有するためのソケットを指定
# Bさん側
tmux -S /tmp/tmux_shared_socket attach

# [PG] 接続されているコネクションを調査するためのコマンド
SELECT pid, query_start, substr(query, 0, 50) FROM pg_stat_activity WHERE state='active' ORDER BY query_start;

# [Linux] コマンド名に完全にマッチするプロセスのファイルディスクリプタの一覧を調べる
ls -al /proc/$(pgrep -x auditd)/fd

# [Linux] ファイルサイズの大きいディレクトリを表示する
du -m --max-depth 2 /* | sort -rn | head -10

# [misc] format as bookmarklet style
http://userjs.up.seesaa.net/js/bookmarklet.html

# [Linux] drop cashe
echo 3 > /proc/sys/vm/drop_caches

# [Windows] ユーザのパスワードなどの情報を確認するコマンド(cmd.exeで実行)
net user hasefumi23 /domain

# [Zabbix] path of slack alert script
/usr/lib/zabbix/alertscripts/slack.sh

# [Linux] awk で合計を求める
ls -la | awk '{ total += $5  }; END { print total  }'

# [Linux] awk で平均を求める
ls -la | awk '{ total += $5  }; END { print total/NR  }'

# [Java] build command
// (1) プロジェクトのクリーン
mvn clean -f pom.xml
// (2) 環境依存設定ビルド(ローカル指定)
mvn install -P local -DskipTests=true -f env/pom.xml
// (3) ビルド (最大スタックサイズ4m指定)
MAVEN_OPTS="-Xss4m" mvn install -P warpack -P prod -DskipTests=true -f pom.xml
// (4) 環境依存設定ビルド(テスト指定)
mvn install -P test -DskipTests=true -f env/pom.xml
// (5) 環境依存設定ビルド(サポート指定)
mvn install -P support -DskipTests=true -f env/pom.xml
// (6) 環境依存設定ビルド(DEV指定)
mvn install -P dev -DskipTests=true -f env/pom.xml

# [Jenkins] api token
1192b94dfd5963b5a117973a4f72484e6f

# [Trello] password
Rb;)_-t~U"=4FNc

# [Linux]
# -N: 行番号表示
# -R: いい感じに表示
# -m: 現在位置の%を表示
less -NRm

# [Jenkins]
# jobで設定されているbranchを一覧する
find /var/lib/jenkins/jobs -type f -name config.xml | xargs grep "<branches>" -A 3 | grep "<name>" | grep -v master

# [Windows]
# パスワードの期限確認のためのコマンド
p net user hasefumi23 /domain

# [Linux]
yum --showduplicates search ${target}

# [Linux]
# curl ip address
curl inet-ip.info

